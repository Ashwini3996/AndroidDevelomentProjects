Android Form Validation
Adding AwesomeValidation Library
So we are going to use AwesomeValidation. So first come inside app level build.gradle file and add the following line inside dependencies block.

compile 'com.basgeekball:awesome-validation:1.3'
1
compile 'com.basgeekball:awesome-validation:1.3'
Now after adding the above line sync your project.
Defining View Objects
Now first we need to define all the View Objects that is needed. So in this case we will define the objects inside MainActivity.java.
MainActivity.javaJava

package net.simplifiedcoding.androidvalidationexample;

import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    //The view objects
    private EditText editTextName, editTextEmail, editTextMobile,
            editTextDob, editTextAge;

    private Button buttonSubmit;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //initializing view objects 
        editTextName = (EditText) findViewById(R.id.editTextName);
        editTextEmail = (EditText) findViewById(R.id.editTextEmail);
        editTextMobile = (EditText) findViewById(R.id.editTextMobile);
        editTextDob = (EditText) findViewById(R.id.editTextDob);
        editTextAge = (EditText) findViewById(R.id.editTextAge);

        buttonSubmit = (Button) findViewById(R.id.buttonSubmit);

        buttonSubmit.setOnClickListener(this);
    }

    private void submitForm() {
        //first validate the form then move ahead     
    }
    
    @Override
    public void onClick(View view) {
        if (view == buttonSubmit) {
            submitForm();
        }
    }
}


package net.simplifiedcoding.androidvalidationexample;
 
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
 
public class MainActivity extends AppCompatActivity implements View.OnClickListener {
 
    //The view objects
    private EditText editTextName, editTextEmail, editTextMobile,
            editTextDob, editTextAge;
 
    private Button buttonSubmit;
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
 
        //initializing view objects 
        editTextName = (EditText) findViewById(R.id.editTextName);
        editTextEmail = (EditText) findViewById(R.id.editTextEmail);
        editTextMobile = (EditText) findViewById(R.id.editTextMobile);
        editTextDob = (EditText) findViewById(R.id.editTextDob);
        editTextAge = (EditText) findViewById(R.id.editTextAge);
 
        buttonSubmit = (Button) findViewById(R.id.buttonSubmit);
 
        buttonSubmit.setOnClickListener(this);
    }
 
    private void submitForm() {
        //first validate the form then move ahead     
    }
    
    @Override
    public void onClick(View view) {
        if (view == buttonSubmit) {
            submitForm();
        }
    }
}





Defining Strings for Error Messages
To display the error messages we need to define all the strings needed inside strings.xml file. So define the following strings inside strings.xml.

<resources>
    <string name="app_name">AndroidValidationExample</string>
 
    <string name="nameerror">Enter a valid name</string>
    <string name="emailerror">Enter a valid email</string>
    <string name="mobileerror">Enter a valid mobile</string>
    <string name="dateerror">Enter a valid date</string>
    <string name="ageerror">Enter a valid age</string>
 
</resources>

//mainActivity.java

package net.simplifiedcoding.androidvalidationexample;
 
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Patterns;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
 
import com.basgeekball.awesomevalidation.AwesomeValidation;
import com.basgeekball.awesomevalidation.ValidationStyle;
import com.google.common.collect.Range;
 






public class MainActivity extends AppCompatActivity implements View.OnClickListener {
 
    //The view objects
    private EditText editTextName, editTextEmail, editTextMobile,
            editTextDob, editTextAge;
 
    private Button buttonSubmit;
 
    //defining AwesomeValidation object
    private AwesomeValidation awesomeValidation;
 
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
 
        //initializing awesomevalidation object
        /*
        * The library provides 3 types of validation
        * BASIC
        * COLORATION
        * UNDERLABEL
        * */
        awesomeValidation = new AwesomeValidation(ValidationStyle.BASIC);
 
        //initializing view objects
        editTextName = (EditText) findViewById(R.id.editTextName);
        editTextEmail = (EditText) findViewById(R.id.editTextEmail);
        editTextMobile = (EditText) findViewById(R.id.editTextMobile);
        editTextDob = (EditText) findViewById(R.id.editTextDob);
        editTextAge = (EditText) findViewById(R.id.editTextAge);
 
        buttonSubmit = (Button) findViewById(R.id.buttonSubmit);
 
 
        //adding validation to edittexts
        awesomeValidation.addValidation(this, R.id.editTextName, "^[A-Za-z\\s]{1,}[\\.]{0,1}[A-Za-z\\s]{0,}$", R.string.nameerror);
        awesomeValidation.addValidation(this, R.id.editTextEmail, Patterns.EMAIL_ADDRESS, R.string.nameerror);
        awesomeValidation.addValidation(this, R.id.editTextMobile, "^[2-9]{2}[0-9]{8}$", R.string.nameerror);
        awesomeValidation.addValidation(this, R.id.editTextDob, "^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$", R.string.nameerror);
        awesomeValidation.addValidation(this, R.id.editTextAge, Range.closed(13, 60), R.string.ageerror);
 
        buttonSubmit.setOnClickListener(this);
    }
 
    private void submitForm() {
        //first validate the form then move ahead
        //if this becomes true that means validation is successfull
        if (awesomeValidation.validate()) {
            Toast.makeText(this, "Validation Successfull", Toast.LENGTH_LONG).show();
 
            //process the data further
        }
    }
 
    @Override
    public void onClick(View view) {
        if (view == buttonSubmit) {
            submitForm();
        }
    }
}




What we did?

First we defined an AwesomeValidation object.
We initialized the object with BASIC style, we have two more different style COLORATION and UNDERLABEL.
Then we added the validation to required EditTexts using addValidation() method with AwesomeValidation object.
addValidation() : This method takes 4 arguments.
Activity Context, we used this to pass the current activity context.
Resource id of EditText in which we want to add validation, we used R.id.viewid
Regex String for adding validation, you can use Regex for more kind of validations
String resource id for error message to show the error if validation fails
Then in submitForm() method we are validating the inputs with validate() method. The method returns true or false, true if validation succeeds and false if validation fails.